services:
  bds-postgres-db:
    image: 'postgres:16-alpine'
    container_name: bds-postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U ${POSTGRES_USER}'
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
      - './db_init/:/docker-entrypoint-initdb.d/'
    networks:
      - bds-project-net
  bds-pgadmin:
    image: 'dpage/pgadmin4:7.7'
    container_name: bds-pgadmin
    restart: unless-stopped
    ports:
      - '127.0.0.1:80:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL}'
      PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD}'
    depends_on:
      bds-postgres-db:
        condition: service_healthy
    volumes:
      - 'pgadmin-data:/var/lib/pgadmin'
      - './servers.json:/pgadmin4/servers.json'
      - './pgpass:/pgadmin4/pgpass'
    entrypoint:
      - /bin/sh
      - '-c'
      - >-
        mkdir -pm 700 /var/lib/pgadmin/storage && 
        mkdir -pm 700 /var/lib/pgadmin/storage/${PGADMIN_USER_DIRECTORY} && 
        chown -R pgadmin:root /var/lib/pgadmin/storage/${PGADMIN_USER_DIRECTORY} &&
        cp /pgadmin4/pgpass /var/lib/pgadmin/storage/${PGADMIN_USER_DIRECTORY}/pgpassfile &&
        chmod 600 /var/lib/pgadmin/storage/${PGADMIN_USER_DIRECTORY}/pgpassfile &&
        /entrypoint.sh
    networks:
      - bds-project-net
  bds-flyway:
    image: 'flyway/flyway:9.22-alpine'
    container_name: bds-flyway
    restart: unless-stopped
    depends_on:
      bds-postgres-db:
        condition: service_healthy
    command: '-configFiles=/flyway/conf/flyway.conf migrate'
    volumes:
      - './flyway:/flyway/sql'
      - './flyway.conf:/flyway/conf/flyway.conf'
    networks:
      - bds-project-net
volumes:
  postgres-data:
    name: postgres-data
  pgadmin-data:
    name: pgadmin-data
networks:
  bds-project-net:
    name: bds-project-net
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: 'br-bds-project'